{"version":3,"file":"static/js/522.4b75cf10.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Background/Background.module.css?ea01","components/Background/Background.jsx","webpack://react-homework-template/./src/components/ScrollBtn/ScrollBtn.module.css?f6c6","components/ScrollBtn/ScrollBtn.jsx","components/OurFriends/OurFriends.styled.js","components/OurFriends/OurFriends.jsx","pages/OurFriendsPage/OurFriendsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"background\":\"Background_background__WcKDH\"};","import React from 'react';\n\nimport css from './Background.module.css';\n\nconst Background = () => {\n  return <div className={css.background}></div>;\n};\n\nexport default Background;\n","// extracted by mini-css-extract-plugin\nexport default {\"scroll\":\"ScrollBtn_scroll__YyOpG\",\"scrollButton\":\"ScrollBtn_scrollButton__1uLC3\"};","import React, { useState, useEffect } from 'react';\nimport { MdKeyboardArrowUp } from 'react-icons/md';\n\nimport css from './ScrollBtn.module.css';\n\nconst ScrollBtn = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrolled = window.pageYOffset;\n      if (scrolled > 200) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <>\n      {isVisible && (\n        <div className={css.scroll} onClick={scrollToTop}>\n          <MdKeyboardArrowUp fontSize=\"large\" />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ScrollBtn;\n","import styled from 'styled-components';\nimport { theme } from '../../theme/theme';\n\nexport const TitleMain = styled.h2`\n  text-align: center;\n  font-size: ${theme.fontSizes[7]};\n  margin-bottom: 36px;\n  margin-top: 160px;\n  font-family: Manrope-Bold;\n\n  @media screen and (max-width: 747px) {\n    font-size: 24px;\n    margin-bottom: 24px;\n    margin-top: 100px;\n  }\n`;\n\nexport const List = styled.ul`\n  margin-top: 24px;\n  margin-bottom: 60px;\n\n  @media screen and (min-width: 748px) {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n  }\n  @media screen and (min-width: 1024px) {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n  }\n`;\n\nexport const Item = styled.li`\n  text-align: center;\n  border-radius: 40px;\n  padding: 16px;\n  box-shadow: ${({ theme }) => theme.boxShadows.main};\n  background-color: #ffffff;\n  width: 280px;\n  height: 250px;\n  margin-left: auto;\n  margin-right: auto;\n  &:focus,\n  &:hover {\n    box-shadow: ${({ theme }) => theme.boxShadows.secondary};\n  }\n\n  @media screen and (max-width: 767px) {\n    margin-top: 20px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 336px;\n    height: 290px;\n    margin: 16px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 395px;\n    height: 300px;\n    margin: 16px;\n  }\n`;\n\nexport const Title = styled.a`\n  font-size: ${theme.fontSizes[3]};\n  font-weight: 700;\n  color: ${theme.colors.blue};\n  text-decoration: none;\n`;\n\nexport const ImgThumb = styled.div`\n  margin-right: 12px;\n  margin-top: 18px;\n\n  @media screen and (max-width: 747px) {\n    width: 100px;\n  }\n\n  @media screen and (min-width: 748px) and (max-width: 1279px) {\n    width: 140px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 146px;\n  }\n`;\n\nexport const Img = styled.img`\n  @media screen and (max-width: 747px) {\n    width: 100px;\n  }\n\n  @media screen and (min-width: 748px) and (max-width: 1279px) {\n    width: 140px;\n    padding: 5px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 146px;\n    padding: 5px;\n  }\n`;\n\nexport const Contacts = styled.div`\n  font-size: ${theme.fontSizes[0]};\n  font-weight: 500;\n  color: ${theme.colors.black};\n  margin-top: 12px;\n\n  @media screen and (min-width: 748px) and (max-width: 1279px) {\n    font-size: ${theme.fontSizes[1]};\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: ${theme.fontSizes[2]};\n  }\n`;\n\nexport const WrapperCard = styled.div`\n  display: flex;\n`;\n\nexport const WrapperInfo = styled.div`\n  text-align: left;\n  padding: 0px;\n`;\n\nexport const ContactTitle = styled.div`\n  margin: 0px;\n  font-size: ${theme.fontSizes[0]};\n  font-family: Manrope-Bold;\n\n  @media screen and (min-width: 767px) {\n    font-size: ${theme.fontSizes[2]};\n  }\n`;\n\nexport const ContactsLink = styled.a`\n  text-decoration: none;\n  font-size: ${theme.fontSizes[0]};\n  font-weight: 500;\n  color: ${theme.colors.black};\n  transition: color 150ms ease-in;\n\n  &:hover,\n  &:focus {\n    color: ${theme.colors.blue};\n  }\n\n  @media screen and (min-width: 748px) and (max-width: 1279px) {\n    font-size: ${theme.fontSizes[1]};\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: ${theme.fontSizes[2]};\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport React, { useEffect } from 'react';\nimport { getFriends } from '../../redux/friends/friends-operation';\nimport {\n  List,\n  Item,\n  Title,\n  TitleMain,\n  ImgThumb,\n  Contacts,\n  WrapperCard,\n  WrapperInfo,\n  ContactTitle,\n  ContactsLink,\n  Img,\n} from './OurFriends.styled';\nimport Background from '../Background/Background';\nimport ScrollBtn from '../ScrollBtn/ScrollBtn';\n\nconst OurFriends = ({ data }) => {\n  const dispatch = useDispatch();\n  const { friends, loading, error } = useSelector(\n    state => state.friends.friends\n  );\n\n  function formatPhone(number) {\n    if (number === 'email only') {\n      return 0;\n    }\n    return number.split(' ').join('');\n  }\n\n  useEffect(() => {\n    dispatch(getFriends());\n  }, [dispatch]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  if (!Array.isArray(friends) || friends.length === 0) {\n    return null;\n  }\n\n  return (\n    <>\n      <TitleMain>Our friends</TitleMain>\n      <Background />\n      <List>\n        {friends\n          ? friends.map(item => (\n              <Item key={item.id}>\n                <Title href={item.url} target=\"_blank\">\n                  {item.title}\n                </Title>\n\n                <WrapperCard>\n                  <ImgThumb>\n                    <Img src={item.imageUrl} alt=\"\"></Img>\n                  </ImgThumb>\n\n                  <WrapperInfo>\n                    <Contacts>\n                      <ContactTitle>Time:</ContactTitle>\n                      {item.workDays &&\n                      Array.isArray(item.workDays) &&\n                      item.workDays.find(day => day.isOpen)?.from &&\n                      item.workDays.find(day => day.isOpen).to\n                        ? `${item.workDays.find(day => day.isOpen).from}-${\n                            item.workDays.find(day => day.isOpen).to\n                          }`\n                        : 'day and night'}\n                    </Contacts>\n\n                    <Contacts>\n                      <ContactTitle>Address:</ContactTitle>\n                      {item.addressUrl ? (\n                        <ContactsLink href={item.addressUrl} target=\"_blank\">\n                          {item.address}\n                        </ContactsLink>\n                      ) : (\n                        <span>website only</span>\n                      )}\n                    </Contacts>\n\n                    <Contacts>\n                      <ContactTitle>Email:</ContactTitle>\n                      {item.email ? (\n                        <ContactsLink href={`mailto:${item.email}`}>\n                          {item.email}\n                        </ContactsLink>\n                      ) : (\n                        <span>website only</span>\n                      )}\n                    </Contacts>\n\n                    <Contacts>\n                      <ContactTitle>Phone:</ContactTitle>\n                      {item.phone && item.phone !== 'website only' ? (\n                        <ContactsLink href={`tel:${formatPhone(item.phone)}`}>\n                          {item.phone}\n                        </ContactsLink>\n                      ) : (\n                        <span>website only</span>\n                      )}\n                    </Contacts>\n                  </WrapperInfo>\n                </WrapperCard>\n              </Item>\n            ))\n          : null}\n        <ScrollBtn />\n      </List>\n    </>\n  );\n};\n\nexport default OurFriends;\n","import OurFriends from '../../components/OurFriends/OurFriends';\n\nconst OurFriendsPage = () => {\n  return (\n    <>\n      <OurFriends />\n    </>\n  );\n};\n\nexport default OurFriendsPage;\n"],"names":["_jsx","className","css","_useState","useState","_useState2","_slicedToArray","isVisible","setIsVisible","useEffect","handleScroll","scrolled","window","pageYOffset","addEventListener","removeEventListener","_Fragment","children","onClick","scrollTo","top","behavior","MdKeyboardArrowUp","fontSize","TitleMain","styled","_templateObject","_taggedTemplateLiteral","theme","List","_templateObject2","Item","_templateObject3","_ref","boxShadows","main","_ref2","secondary","Title","_templateObject4","ImgThumb","_templateObject5","Img","_templateObject6","Contacts","_templateObject7","WrapperCard","_templateObject8","WrapperInfo","_templateObject9","ContactTitle","_templateObject10","ContactsLink","_templateObject11","data","dispatch","useDispatch","_useSelector","useSelector","state","friends","loading","error","getFriends","_jsxs","Array","isArray","length","Background","map","item","_item$workDays$find","number","href","url","target","title","src","imageUrl","alt","workDays","find","day","isOpen","from","to","concat","addressUrl","address","email","phone","split","join","id","ScrollBtn","OurFriends"],"sourceRoot":""}